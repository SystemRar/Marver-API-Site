{"version":3,"file":"static/js/756.ac72382b.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/charSearchForm/CharSearchForm.js","components/errorBoundary/ErrorBoundary.js","components/pages/MainPage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js"],"sourcesContent":["import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage;","import {useState, useEffect} from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nconst RandomChar = () => {\r\n\r\n\tconst [char, setChar] = useState(null);\r\n\tconst {getCharacter, clearError, process, setProcess} = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateChar();\r\n\t\t//const timerId = setInterval(updateChar, 60000);\r\n\r\n\t\treturn () => {\r\n\t\t\t//clearInterval(timerId)\r\n\t\t}\r\n\t\t// eslint-disable-next-line\r\n\t}, [])\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char);\r\n\t}\r\n\r\n\tconst updateChar = () => {\r\n\t\tclearError();\r\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\r\n\t\tgetCharacter(id)\r\n\t\t.then(onCharLoaded)\r\n\t\t.then(() => setProcess('confirmed'));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"randomchar\">\r\n\t\t\t{setContent(process, View, char)}\r\n\t\t\t<div className=\"randomchar__static\">\r\n\t\t\t\t<p className=\"randomchar__title\">\r\n\t\t\t\t\tRandom character for today!<br/>\r\n\t\t\t\t\tDo you want to get to know him better?\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"randomchar__title\">\r\n\t\t\t\t\tOr choose another one\r\n\t\t\t\t</p>\r\n\t\t\t\t<button onClick={updateChar} className=\"button button__main\">\r\n\t\t\t\t\t<div className=\"inner\">try it</div>\r\n\t\t\t\t</button>\r\n\t\t\t\t<img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst View = ({data}) => {\r\n\tconst {name, description, thumbnail} = data;\r\n\tlet imgStyle = {'objectFit' : 'cover'};\r\n\tif (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n\t\timgStyle = {'objectFit' : 'contain'};\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"randomchar__block\">\r\n\t\t\t<img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\r\n\t\t\t<div className=\"randomchar__info\">\r\n\t\t\t\t<p className=\"randomchar__name\">{name}</p>\r\n\t\t\t\t<p className=\"randomchar__descr\">\r\n\t\t\t\t\t{description}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RandomChar;","import {useState, useEffect, useRef, useMemo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './charList.scss';\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n\tswitch (process) {\r\n\t\tcase 'waiting':\r\n\t\t\treturn <Spinner/>;\r\n\t\tcase 'loading':\r\n\t\t\treturn newItemLoading ? <Component/> : <Spinner/>;\r\n\t\tcase 'confirmed':\r\n\t\t\treturn <Component/>;\r\n\t\tcase 'error':\r\n\t\t\treturn <ErrorMessage/>;\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Unexpected process state');\r\n\t}\r\n}\r\n\r\nconst CharList = (props) => {\r\n\r\n\tconst [charList, setCharList] = useState([]);\r\n\tconst [newItemLoading, setnewItemLoading] = useState(false);\r\n\tconst [offset, setOffset] = useState(109);\r\n\tconst [charEnded, setCharEnded] = useState(false);\r\n\r\n\tconst {getAllCharacters, process, setProcess} = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tonRequest(offset, true);\r\n\t\t// eslint-disable-next-line\r\n\t}, [])\r\n\r\n\tconst onRequest = (offset, initial) => {\r\n\t\tinitial ? setnewItemLoading(false) : setnewItemLoading(true);\r\n\t\tgetAllCharacters(offset)\r\n\t\t.then(onCharListLoaded)\r\n\t\t.then(() => setProcess('confirmed'));\r\n\t}\r\n\r\n\tconst onCharListLoaded = async(newCharList) => {\r\n\t\tlet ended = false;\r\n\t\tif (newCharList.length < 9) {\r\n\t\t\tended = true;\r\n\t\t}\r\n\t\tsetCharList([...charList, ...newCharList]);\r\n\t\tsetnewItemLoading(false);\r\n\t\tsetOffset(offset + 9);\r\n\t\tsetCharEnded(ended);\r\n\t}\r\n\r\n\tconst itemRefs = useRef([]);\r\n\r\n\tconst focusOnItem = (id) => {\r\n\t\titemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n\t\titemRefs.current[id].classList.add('char__item_selected');\r\n\t\titemRefs.current[id].focus();\r\n\t}\r\n\r\n\tconst renderItems = arr => {\r\n\t\tconst items =  arr.map((item, i) => {\r\n\t\t\tlet imgStyle = {'objectFit' : 'cover'};\r\n\t\t\tif (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n\t\t\t\timgStyle = {'objectFit' : 'unset'};\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<CSSTransition key={item.id} timeout={500} classNames=\"char__item\">\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tclassName=\"char__item\"\r\n\t\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\t\tref={el => itemRefs.current[i] = el}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.onCharSelected(item.id);\r\n\t\t\t\t\t\t\tfocusOnItem(i);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonKeyPress={(e) => {\r\n\t\t\t\t\t\t\tif (e.key === ' ' || e.key === \"Enter\") {\r\n\t\t\t\t\t\t\t\tprops.onCharSelected(item.id);\r\n\t\t\t\t\t\t\t\tfocusOnItem(i);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={imgStyle}/>\r\n\t\t\t\t\t\t<div className=\"char__name\">{item.name}</div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</CSSTransition>\r\n\t\t\t)\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<ul className=\"char__grid\">\r\n\t\t\t\t<TransitionGroup component={null}>\r\n\t\t\t\t\t{items}\r\n\t\t\t\t</TransitionGroup>\r\n\t\t\t</ul>\r\n\t\t)\r\n\t}\r\n\r\n\tconst elements = useMemo(() => {\r\n\t\treturn setContent(process, () => renderItems(charList), newItemLoading);\r\n\t\t// eslint-disable-next-line\r\n\t}, [process])\r\n\r\n\treturn (\r\n\t\t<div className=\"char__list\">\r\n\t\t\t{elements}\r\n\t\t\t<button\r\n\t\t\t\tdisabled={newItemLoading}\r\n\t\t\t\tstyle={{'display' : charEnded ? 'none' : 'block'}}\r\n\t\t\t\tclassName=\"button button__main button__long\"\r\n\t\t\t\tonClick={() => onRequest(offset)}>\r\n\t\t\t\t<div className=\"inner\">load more</div>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nCharList.propTypes = {\r\n\tonCharSelected: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharList;","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\n\r\nimport './charInfo.scss';\r\n\r\nconst CharInfo = (props) => {\r\n\r\n\tconst [char, setChar] = useState(null);\r\n\r\n\tconst {getCharacter, clearError, process, setProcess} = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateChar()\r\n\t\t// eslint-disable-next-line\r\n\t}, [props.charId])\r\n\r\n\tconst updateChar = () => {\r\n\t\tconst {charId} = props;\r\n\t\tif (!charId) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tclearError();\r\n\t\tgetCharacter(charId)\r\n\t\t.then(onCharLoaded)\r\n\t\t.then(() => setProcess('confirmed'))\r\n\t}\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"char__info\">\r\n\t\t\t{setContent(process, View, char)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst View = ({data}) => {\r\n\tconst {name, description, thumbnail, homepage, wiki, comics} = data;\r\n\r\n\tlet imgStyle = {'objectFit' : 'cover'};\r\n\tif (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n\t\timgStyle = {'objectFit' : 'contain'};\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"char__basics\">\r\n\t\t\t\t<img src={thumbnail} alt={name} style={imgStyle}/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"char__descr\">\r\n\t\t\t\t{description}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"char__comics\">Comics:</div>\r\n\t\t\t<ul className=\"char__comics-list\">\r\n\t\t\t\t{comics.length > 0 ? null : 'There is no comics with this character'}\r\n\t\t\t\t{\r\n\t\t\t\t\tcomics.map((item, i) => {\r\n\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\tif (i > 9) return;\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={i} className=\"char__comics-item\">\r\n\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nCharInfo.propTypes = {\r\n\tcharId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;","import {useState} from 'react';\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './charSearchForm.scss';\r\n\r\nconst CharSearchForm = () => {\r\n\tconst [char, setChar] = useState(null);\r\n\tconst {getCharacterByName, clearError, process, setProcess} = useMarvelService();\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char);\r\n\t}\r\n\r\n\tconst updateChar = (name) => {\r\n\t\tclearError();\r\n\r\n\t\tgetCharacterByName(name)\r\n\t\t.then(onCharLoaded)\r\n\t\t.then(() => setProcess('confirmed'));\r\n\t}\r\n\r\n\tconst errorMessage = process === 'error' ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\r\n\tconst results = !char ? null : char.length > 0 ?\r\n\t\t<div className=\"char__search-wrapper\">\r\n\t\t\t<div className=\"char__search-success\">There is! Visit {char[0].name} page?</div>\r\n\t\t\t<Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\r\n\t\t\t\t<div className=\"inner\">To page</div>\r\n\t\t\t</Link>\r\n\t\t</div> :\r\n\t\t<div className=\"char__search-error\">\r\n\t\t\tThe character was not found. Check the name and try again\r\n\t\t</div>;\r\n\r\n\treturn (\r\n\t\t<div className=\"char__search-form\">\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues = {{\r\n\t\t\t\t\tcharName: ''\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema = {Yup.object({\r\n\t\t\t\t\tcharName: Yup.string().required('This field is required')\r\n\t\t\t\t})}\r\n\t\t\t\tonSubmit = { ({charName}) => {\r\n\t\t\t\t\tupdateChar(charName);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by name:</label>\r\n\t\t\t\t\t<div className=\"char__search-wrapper\">\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tid=\"charName\"\r\n\t\t\t\t\t\t\tname='charName'\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tplaceholder=\"Enter name\"/>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\tclassName=\"button button__main\"\r\n\t\t\t\t\t\t\tdisabled={process === 'loading'}>\r\n\t\t\t\t\t\t\t<div className=\"inner\">find</div>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\r\n\t\t\t\t</Form>\r\n\t\t\t</Formik>\r\n\t\t\t{results}\r\n\t\t\t{errorMessage}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CharSearchForm;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false\r\n\t}\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo);\r\n\t\tthis.setState({\r\n\t\t\terror: true\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage/>\r\n\t\t}\r\n\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport CharSearchForm from '../charSearchForm/CharSearchForm';\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n\tconst [selectedChar, setChar] = useState(null);\r\n\r\n\tconst onCharSelected = (id) => {\r\n\t\tsetChar(id);\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tcontent=\"Marvel information portal\"\r\n\t\t\t\t/>\r\n\t\t\t\t<title>Marvel information portal</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar/>\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className=\"char__content\">\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList onCharSelected={onCharSelected}/>\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<div className='infoAndSearchChar'>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharInfo charId={selectedChar}/>\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharSearchForm/>\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default MainPage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst { request, clearError, process, setProcess } = useHttp();\r\n\r\n\tconst _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n\tconst _apiKey = \"apikey=b99363af23d1cc536718d6118ce17444\";\r\n\tconst _baseOffset = 210;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t};\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 210)}...`\r\n\t\t\t\t: \"There is no description for this character\",\r\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n\treturn {\r\n\t\tclearError,\r\n\t\tprocess,\r\n\t\tsetProcess,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacterByName,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t};\r\n};\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\tconst [process, setProcess] = useState('waiting');\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n\t\tsetProcess('loading');\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, body, headers});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\treturn data;\r\n\t\t} catch(e) {\r\n\t\t\tsetProcess('error');\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => {\r\n\t\tsetProcess('loading');\r\n\t}, []);\r\n\r\n\treturn {request, clearError, process, setProcess}\r\n}","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p className=\"char__select\">Please select a character to see information</p>\r\n\t\t\t<div className=\"skeleton\">\r\n\t\t\t\t<div className=\"pulse skeleton__header\">\r\n\t\t\t\t\t<div className=\"pulse skeleton__circle\"></div>\r\n\t\t\t\t\t<div className=\"pulse skeleton__mini\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\r\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\r\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n\tswitch (process) {\r\n\t\tcase 'waiting':\r\n\t\t\treturn <Skeleton/>;\r\n\t\tcase 'loading':\r\n\t\t\treturn <Spinner/>;\r\n\t\tcase 'confirmed':\r\n\t\t\treturn <Component data={data}/>;\r\n\t\tcase 'error':\r\n\t\t\treturn <ErrorMessage/>;\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Unexpected process state');\r\n\t}\r\n}\r\n\r\nexport default setContent;"],"names":["_jsx","style","display","width","height","objectFit","margin","src","img","alt","View","_ref","data","name","description","thumbnail","imgStyle","_jsxs","className","children","_useState","useState","_useState2","_slicedToArray","char","setChar","_useMarvelService","useMarvelService","getCharacter","clearError","process","setProcess","useEffect","updateChar","onCharLoaded","id","Math","floor","random","then","setContent","onClick","mjolnir","props","charList","setCharList","_useState3","_useState4","newItemLoading","setnewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharListLoaded","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newCharList","ended","wrap","_context","prev","next","length","concat","_toConsumableArray","stop","_x","apply","arguments","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","elements","useMemo","Component","Spinner","ErrorMessage","Error","arr","items","map","i","CSSTransition","timeout","classNames","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","TransitionGroup","component","renderItems","disabled","comics","homepage","wiki","_Fragment","charId","getCharacterByName","errorMessage","results","Link","to","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","htmlFor","Field","type","placeholder","FormikErrorMessage","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","error","_createClass","value","errorInfo","console","log","this","setState","selectedChar","Helmet","content","RandomChar","CharList","CharInfo","CharSearchForm","decoration","_useHttp","request","useCallback","url","method","body","headers","response","_args","undefined","fetch","sent","ok","status","json","abrupt","t0","useHttp","_apiBase","_apiKey","res","_transformCharacter","_ref2","_callee2","_context2","_ref3","_callee3","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","slice","path","extension","urls","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","Skeleton"],"sourceRoot":""}